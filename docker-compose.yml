version: '3.8'
services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: proto-pie-task:latest
  #   restart: unless-stopped
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_HOST=postgres
  #     - DATABASE_PORT=5432
  #     - RABBITMQ_HOST=rabbitmq
  #   ports:
  #     - '3000:3000' 
  #   volumes:
  #     - ./:/usr/src/app:cached
  #     - /usr/src/app/node_modules
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - backend

  postgres:
    image: postgres:18
    restart: unless-stopped
    environment:
      - POSTGRES_USER=proto-pie
      - POSTGRES_PASSWORD=proto-pie
      - POSTGRES_DB=app_db
    volumes:
      - ./db/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U proto-pie -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  # rabbitmq:
  #   image: rabbitmq:3.11-management
  #   restart: unless-stopped
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=proto-pie
  #     - RABBITMQ_DEFAULT_PASS=proto-pie
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "status"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
